<common_patterns>
  <shadcn_component_patterns>
    <pattern name="button">
      <usage>Primary action buttons throughout the site</usage>
      <example><![CDATA[
import { Button } from "@/components/ui/button"

// Primary button
<Button className="bg-blue-600 hover:bg-blue-700">
  Click me
</Button>

// Secondary button
<Button variant="secondary">
  Cancel
</Button>
      ]]></example>
    </pattern>

    <pattern name="card">
      <usage>Content containers with shadows and rounded corners</usage>
      <example><![CDATA[
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"

<Card className="shadow-lg">
  <CardHeader>
    <CardTitle>Card Title</CardTitle>
  </CardHeader>
  <CardContent>
    Card content here
  </CardContent>
</Card>
      ]]></example>
    </pattern>

    <pattern name="form">
      <usage>User input forms with validation</usage>
      <example><![CDATA[
import { useForm } from "react-hook-form"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"

function ContactForm() {
  const { register, handleSubmit } = useForm()

  const onSubmit = (data) => {
    console.log(data)
  }

  return (
    <form onSubmit={handleSubmit(onSubmit)} className="space-y-4">
      <Input {...register("email")} placeholder="Email" />
      <Button type="submit">Submit</Button>
    </form>
  )
}
      ]]></example>
    </pattern>
  </shadcn_component_patterns>

  <tailwind_patterns>
    <pattern name="responsive_design">
      <usage>Mobile-first responsive design with breakpoints</usage>
      <classes>sm:, md:, lg:, xl:</classes>
      <example><![CDATA[
<div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
  <div className="text-sm md:text-base lg:text-lg">
    Responsive text
  </div>
</div>
      ]]></example>
    </pattern>

    <pattern name="spacing_system">
      <usage>Consistent spacing using Tailwind scale</usage>
      <scale>m-1(4px), m-2(8px), m-3(12px), m-4(16px), etc.</scale>
      <example><![CDATA[
<div className="p-4 m-2 space-x-3">
  Properly spaced content
</div>
      ]]></example>
    </pattern>

    <pattern name="color_system">
      <usage>Design system colors mapped to Tailwind</usage>
      <mapping>
        <color name="primary">#2563eb → blue-600</color>
        <color name="secondary">#6b7280 → gray-500</color>
        <color name="accent">#10b981 → emerald-500</color>
      </mapping>
      <example><![CDATA[
<div className="bg-blue-600 text-white hover:bg-blue-700">
  Primary button
</div>
      ]]></example>
    </pattern>
  </tailwind_patterns>

  <react_patterns>
    <pattern name="component_structure">
      <usage>Clean component organization</usage>
      <structure>
        <imports>Import statements at top</imports>
        <types>TypeScript interfaces/types</types>
        <component>Main component function</component>
        <export>Default export</export>
      </structure>
      <example><![CDATA[
import React from "react"
import { Button } from "@/components/ui/button"

interface HeroProps {
  title: string
  subtitle: string
}

export function Hero({ title, subtitle }: HeroProps) {
  return (
    <div className="hero-section">
      <h1>{title}</h1>
      <p>{subtitle}</p>
      <Button>Get Started</Button>
    </div>
  )
}
      ]]></example>
    </pattern>

    <pattern name="state_management">
      <usage>Local state with useState hook</usage>
      <example><![CDATA[
import { useState } from "react"

function Counter() {
  const [count, setCount] = useState(0)

  return (
    <div>
      <p>Count: {count}</p>
      <button onClick={() => setCount(count + 1)}>
        Increment
      </button>
    </div>
  )
}
      ]]></example>
    </pattern>
  </react_patterns>

  <accessibility_patterns>
    <pattern name="semantic_html">
      <usage>Proper semantic HTML elements</usage>
      <elements>
        <element>nav - navigation</element>
        <element>main - main content</element>
        <element>section - content sections</element>
        <element>article - independent content</element>
        <element>aside - sidebar content</element>
      </elements>
      <example><![CDATA[
<nav className="navbar">
  <ul>
    <li><a href="/">Home</a></li>
  </ul>
</nav>

<main>
  <section>
    <h2>Section Title</h2>
    <article>Article content</article>
  </section>
</main>
      ]]></example>
    </pattern>

    <pattern name="aria_attributes">
      <usage>ARIA attributes for screen readers</usage>
      <attributes>
        <attr>aria-label - descriptive labels</attr>
        <attr>aria-expanded - expandable elements</attr>
        <attr>role - semantic roles</attr>
        <attr>aria-hidden - hidden content</attr>
      </attributes>
      <example><![CDATA[
<button aria-label="Close menu" aria-expanded={isOpen}>
  <MenuIcon />
</button>

<div role="navigation" aria-label="Main navigation">
  Navigation content
</div>
      ]]></example>
    </pattern>
  </accessibility_patterns>

  <folder_structure_patterns>
    <pattern name="app_directory">
      <structure>
        <folder>components/ - React components</folder>
        <folder>components/ui/ - Shadcn UI components</folder>
        <folder>styles/ - Global styles</folder>
        <folder>hooks/ - Custom React hooks</folder>
        <folder>lib/ - Utility functions</folder>
      </structure>
    </pattern>

    <pattern name="component_organization">
      <structure>
        <file>Hero.tsx - Main hero component</file>
        <file>Features.tsx - Features section</file>
        <file>Navbar.tsx - Navigation component</file>
        <file>Footer.tsx - Footer component</file>
      </structure>
    </pattern>
  </folder_structure_patterns>
</common_patterns>