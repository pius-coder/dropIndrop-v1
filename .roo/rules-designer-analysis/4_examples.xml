<conversion_examples>
  <html_to_react_example>
    <description>Converting a typical landing page hero section</description>
    <original_html><![CDATA[
<div class="hero bg-blue-100 py-20">
  <div class="container mx-auto px-4">
    <div class="text-center">
      <h1 class="text-4xl font-bold text-gray-800 mb-4">
        Welcome to Our Platform
      </h1>
      <p class="text-xl text-gray-600 mb-8">
        The best solution for your needs
      </p>
      <button class="bg-blue-600 text-white px-8 py-3 rounded-lg hover:bg-blue-700">
        Get Started
      </button>
    </div>
  </div>
</div>
    ]]></original_html>
    <converted_react><![CDATA[
import { Button } from "@/components/ui/button"

export function Hero() {
  return (
    <div className="bg-blue-100 py-20">
      <div className="container mx-auto px-4">
        <div className="text-center">
          <h1 className="text-4xl font-bold text-gray-800 mb-4">
            Welcome to Our Platform
          </h1>
          <p className="text-xl text-gray-600 mb-8">
            The best solution for your needs
          </p>
          <Button className="bg-blue-600 hover:bg-blue-700 text-white px-8 py-3">
            Get Started
          </Button>
        </div>
      </div>
    </div>
  )
}
    ]]></converted_react>
    <explanation>
      - Converted HTML classes to Tailwind classes
      - Replaced button with Shadcn Button component
      - Removed inline styles (converted to Tailwind)
      - Added proper component structure with export
    </explanation>
  </html_to_react_example>

  <responsive_conversion_example>
    <description>Converting responsive grid layout</description>
    <original_html><![CDATA[
<div class="features">
  <div class="container mx-auto px-4 py-16">
    <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
      <div class="feature-card bg-white p-6 rounded-lg shadow-md">
        <h3 class="text-xl font-semibold mb-4">Feature 1</h3>
        <p class="text-gray-600">Description of feature 1</p>
      </div>
      <div class="feature-card bg-white p-6 rounded-lg shadow-md">
        <h3 class="text-xl font-semibold mb-4">Feature 2</h3>
        <p class="text-gray-600">Description of feature 2</p>
      </div>
      <div class="feature-card bg-white p-6 rounded-lg shadow-md">
        <h3 class="text-xl font-semibold mb-4">Feature 3</h3>
        <p class="text-gray-600">Description of feature 3</p>
      </div>
    </div>
  </div>
</div>
    ]]></original_html>
    <converted_react><![CDATA[
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"

export function Features() {
  return (
    <div className="features">
      <div className="container mx-auto px-4 py-16">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
          <Card>
            <CardHeader>
              <CardTitle>Feature 1</CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-gray-600">Description of feature 1</p>
            </CardContent>
          </Card>
          <Card>
            <CardHeader>
              <CardTitle>Feature 2</CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-gray-600">Description of feature 2</p>
            </CardContent>
          </Card>
          <Card>
            <CardHeader>
              <CardTitle>Feature 3</CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-gray-600">Description of feature 3</p>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  )
}
    ]]></converted_react>
    <explanation>
      - Used Shadcn Card components for consistent styling
      - Maintained responsive grid layout
      - Proper semantic structure with CardHeader/CardContent
      - Converted to component with proper export
    </explanation>
  </responsive_conversion_example>

  <form_conversion_example>
    <description>Converting contact form with validation</description>
    <original_html><![CDATA[
<form class="contact-form bg-white p-8 rounded-lg shadow-md">
  <div class="mb-4">
    <label class="block text-gray-700 text-sm font-bold mb-2" for="name">
      Name
    </label>
    <input
      class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
      id="name"
      type="text"
      placeholder="Your name"
    >
  </div>
  <div class="mb-4">
    <label class="block text-gray-700 text-sm font-bold mb-2" for="email">
      Email
    </label>
    <input
      class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
      id="email"
      type="email"
      placeholder="your@email.com"
    >
  </div>
  <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" type="submit">
    Send Message
  </button>
</form>
    ]]></original_html>
    <converted_react><![CDATA[
import { useForm } from "react-hook-form"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"

export function ContactForm() {
  const { register, handleSubmit, formState: { errors } } = useForm()

  const onSubmit = (data) => {
    console.log(data)
    // Handle form submission
  }

  return (
    <Card className="w-full max-w-md mx-auto">
      <CardHeader>
        <CardTitle>Contact Us</CardTitle>
      </CardHeader>
      <CardContent>
        <form onSubmit={handleSubmit(onSubmit)} className="space-y-4">
          <div>
            <Label htmlFor="name">Name</Label>
            <Input
              id="name"
              {...register("name", { required: true })}
              placeholder="Your name"
            />
            {errors.name && <span className="text-red-500 text-sm">Name is required</span>}
          </div>
          <div>
            <Label htmlFor="email">Email</Label>
            <Input
              id="email"
              type="email"
              {...register("email", { required: true, pattern: /^\S+@\S+$/i })}
              placeholder="your@email.com"
            />
            {errors.email && <span className="text-red-500 text-sm">Valid email is required</span>}
          </div>
          <Button type="submit" className="w-full">
            Send Message
          </Button>
        </form>
      </CardContent>
    </Card>
  )
}
    ]]></converted_react>
    <explanation>
      - Integrated react-hook-form for validation
      - Used Shadcn form components (Input, Label, Button)
      - Added proper form validation with error display
      - Wrapped in Card component for better styling
      - Added accessibility with proper labels and IDs
    </explanation>
  </form_conversion_example>

  <navigation_conversion_example>
    <description>Converting responsive navigation with mobile menu</description>
    <original_html><![CDATA[
<nav class="bg-white shadow-md">
  <div class="container mx-auto px-4">
    <div class="flex justify-between items-center py-4">
      <div class="text-xl font-bold">Logo</div>
      <div class="hidden md:flex space-x-8">
        <a href="#home" class="text-gray-600 hover:text-blue-600">Home</a>
        <a href="#features" class="text-gray-600 hover:text-blue-600">Features</a>
        <a href="#about" class="text-gray-600 hover:text-blue-600">About</a>
        <a href="#contact" class="text-gray-600 hover:text-blue-600">Contact</a>
      </div>
      <button class="md:hidden" onclick="toggleMenu()">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>
    <div id="mobile-menu" class="hidden md:hidden pb-4">
      <a href="#home" class="block py-2 text-gray-600 hover:text-blue-600">Home</a>
      <a href="#features" class="block py-2 text-gray-600 hover:text-blue-600">Features</a>
      <a href="#about" class="block py-2 text-gray-600 hover:text-blue-600">About</a>
      <a href="#contact" class="block py-2 text-gray-600 hover:text-blue-600">Contact</a>
    </div>
  </div>
</nav>
    ]]></original_html>
    <converted_react><![CDATA[
import { useState } from "react"
import { Button } from "@/components/ui/button"

export function Navbar() {
  const [isOpen, setIsOpen] = useState(false)

  return (
    <nav className="bg-white shadow-md">
      <div className="container mx-auto px-4">
        <div className="flex justify-between items-center py-4">
          <div className="text-xl font-bold">Logo</div>
          <div className="hidden md:flex space-x-8">
            <a href="#home" className="text-gray-600 hover:text-blue-600">Home</a>
            <a href="#features" className="text-gray-600 hover:text-blue-600">Features</a>
            <a href="#about" className="text-gray-600 hover:text-blue-600">About</a>
            <a href="#contact" className="text-gray-600 hover:text-blue-600">Contact</a>
          </div>
          <Button
            variant="ghost"
            className="md:hidden"
            onClick={() => setIsOpen(!isOpen)}
            aria-label="Toggle mobile menu"
            aria-expanded={isOpen}
          >
            <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
            </svg>
          </Button>
        </div>
        {isOpen && (
          <div className="md:hidden pb-4 space-y-2">
            <a href="#home" className="block py-2 text-gray-600 hover:text-blue-600">Home</a>
            <a href="#features" className="block py-2 text-gray-600 hover:text-blue-600">Features</a>
            <a href="#about" className="block py-2 text-gray-600 hover:text-blue-600">About</a>
            <a href="#contact" className="block py-2 text-gray-600 hover:text-blue-600">Contact</a>
          </div>
        )}
      </div>
    </nav>
  )
}
    ]]></converted_react>
    <explanation>
      - Converted vanilla JS toggle to React useState hook
      - Added proper ARIA attributes for accessibility
      - Used Shadcn Button component for hamburger menu
      - Conditional rendering for mobile menu
      - Maintained responsive design with Tailwind classes
    </explanation>
  </navigation_conversion_example>
</conversion_examples>